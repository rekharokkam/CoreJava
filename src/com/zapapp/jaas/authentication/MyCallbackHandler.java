package com.zapapp.jaas.authentication;import javax.security.auth.callback.CallbackHandler;import java.io.IOException;import javax.security.auth.callback.UnsupportedCallbackException;import javax.security.auth.callback.NameCallback;import javax.security.auth.callback.PasswordCallback;import javax.security.auth.callback.Callback;import java.io.BufferedReader;import java.io.InputStreamReader;public class MyCallbackHandler implements CallbackHandler{	public void handle (Callback[] callbacks)		throws IOException, UnsupportedCallbackException	{		int callbackLength = callbacks.length;		if ( (null != callbacks) && (callbackLength > 0) )		{			for (int callBackCounter = callbackLength; 				--callBackCounter >= 0;)			{				if (callbacks [callBackCounter] instanceof NameCallback)				{					NameCallback nameCallback = (NameCallback)callbacks [callBackCounter];System.out.println ("THE PASSED IN IS A NAME CALLBACK HANDLER");										System.out.println ("This is name callbackHandler " + nameCallback.getPrompt () + "  ?  ");					System.out.flush ();					String username = new BufferedReader( new InputStreamReader(System.in)).readLine();										nameCallback.setName (username);									}								else if (callbacks [callBackCounter] instanceof PasswordCallback)				{System.out.println ("THE PASSED IN IS A PASSWORD CALLBACK HANDLER");															PasswordCallback passwordCallback = (PasswordCallback)callbacks [callBackCounter];					System.out.println ("This is password callbackHandler " + passwordCallback.getPrompt () + "  ?  ");					System.out.flush ();					String password = new BufferedReader( new InputStreamReader(System.in)).readLine();										passwordCallback.setPassword (password.toCharArray ());					password = null;				}								else				{					throw new UnsupportedCallbackException(callbacks [callBackCounter], "Unsupported Callback Type");				}			}		}	}}